name: Build and Release IPA

on:
  workflow_dispatch:
    inputs:
      decrypted_ipa_url:
        description: "Direct URL of the decrypted IPA"
        required: true
        type: string

jobs:
  prepareDependencies:
    name: Prepare Dependencies
    runs-on: macos-latest
    outputs:
      ipa_bundle_id: ${{ steps.extractIPA.outputs.ipa_bundle_id }}
      ipa_version: ${{ steps.extractIPA.outputs.ipa_version }}
      tgextra_version: ${{ steps.extractTGExtra.outputs.tgextra_version }}
    steps:
      - name: Download decrypted IPA
        env:
          IPA_URL: ${{ inputs.decrypted_ipa_url }}
        run: |
          curl -L -A "Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_7)" -o decrypted.ipa "$IPA_URL"
          unzip -q decrypted.ipa

      - name: Extract bundle ID & version
        id: extractIPA
        run: |
          PLIST=$(ls Payload/*.app/Info.plist | head -n1)

          IPA_BUNDLE_ID=$(grep -A1 '<key>CFBundleIdentifier</key>' "$PLIST" | sed -n 's/.*<string>\(.*\)<\/string>.*/\1/p')
          IPA_VERSION=$(grep -A1 '<key>CFBundleShortVersionString</key>' "$PLIST" | sed -n 's/.*<string>\(.*\)<\/string>.*/\1/p')

          echo "ipa_bundle_id=$IPA_BUNDLE_ID" >> "$GITHUB_OUTPUT"
          echo "ipa_version=$IPA_VERSION" >> "$GITHUB_OUTPUT"

      - name: Download latest TGExtra
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          gh release download release --repo waruhachi/TGExtra --pattern 'com.choco.tg_*_iphoneos-arm.deb' --dir .

      - name: Extract TGExtra version
        id: extractTGExtra
        run: |
          FIRST=$(ls com.choco.tg_*_iphoneos-arm.deb | head -n1)
          TGEXTRA_VERSION=$(echo "$FIRST" | sed -E 's/com\.choco\.tg_([0-9\.]+)_.+\.deb/\1/')

          echo "tgextra_version=$TGEXTRA_VERSION" >> "$GITHUB_OUTPUT"

      - name: Download latest SideloadFix.dylib
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          gh release download release --repo waruhachi/SideloadFix --pattern 'SideloadFix.dylib' --dir .

      - name: Upload Dependencies
        uses: actions/upload-artifact@v4
        with:
          name: dependencies
          path: |
            decrypted.ipa
            com.choco.tg_*_iphoneos-arm.deb
            SideloadFix.dylib

  inject:
    name: Inject TGExtra & SideloadFix
    needs: prepareDependencies
    runs-on: macos-latest
    env:
      IPA_BUNDLE_ID: ${{ needs.prepareDependencies.outputs.ipa_bundle_id }}
      IPA_VERSION: ${{ needs.prepareDependencies.outputs.ipa_version }}
      TGEXTRA_VERSION: ${{ needs.prepareDependencies.outputs.tgextra_version }}
    steps:
      - name: Download dependencies
        uses: actions/download-artifact@v4
        with:
          name: dependencies
          merge-multiple: true

      - name: Install Cyan CLI
        run: |
          pip install --force-reinstall https://github.com/asdfzxcvbn/pyzule-rw/archive/main.zip

      - name: Inject TGExtra & SideloadFix into IPA
        run: |
          OUT_BASE="$IPA_BUNDLE_ID-$IPA_VERSION-TGExtra-$TGEXTRA_VERSION"
          OUT_IPA="$OUT_BASE.ipa"
          OUT_TIPA="$OUT_BASE.tipa"

          cyan -i decrypted.ipa -o "$OUT_IPA" -uwsgq -f com.choco.tg_$TGEXTRA_VERSION_iphoneos-arm.deb -f SideloadFix.dylib

          cp "$OUT_IPA" "$OUT_TIPA"
          mkdir -p artifacts
          mv "$OUT_IPA" "$OUT_TIPA" artifacts/

      - name: Upload Artifacts
        uses: actions/upload-artifact@v4
        with:
          name: artifacts
          path: |
            artifacts/*.ipa
            artifacts/*.tipa

  updateRelease:
    name: Update GitHub Release with IPA and TIPA
    needs: inject
    runs-on: macos-latest
    steps:
      - name: Download artifacts
        uses: actions/download-artifact@v4
        with:
          path: .
          name: artifacts
          merge-multiple: true

      - name: Fetch existing release body
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          gh release view release --repo ${{ github.repository }} --json body --jq .body > release_body.md

      - name: Generate Checksums
        id: metadata
        run: |
          ls artifacts

          for ipa in artifacts/*.ipa; do
            if [ -f "$ipa" ]; then
              echo "### Sideload (IPA)" >> release_body.md
              echo "* MD5: $(md5 -q $ipa)" >> release_body.md
              echo "* SHA1: $(shasum -a 1 $ipa | awk '{ print $1 }')" >> release_body.md
              echo "* SHA256: $(shasum -a 256 $ipa | awk '{ print $1 }')" >> release_body.md
              echo "" >> release_body.md
              break
            fi
          done

          for tipa in artifacts/*.tipa; do
            if [ -f "$tipa" ]; then
              echo "### TrollStore (TIPA)" >> release_body.md
              echo "* MD5: $(md5 -q $tipa)" >> release_body.md
              echo "* SHA1: $(shasum -a 1 $tipa | awk '{ print $1 }')" >> release_body.md
              echo "* SHA256: $(shasum -a 256 $tipa | awk '{ print $1 }')" >> release_body.md
              echo "" >> release_body.md
              break
            fi
          done

      - name: Update GitHub Release
        uses: softprops/action-gh-release@v2
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: release
          name: ${{ github.event.repository.name }}
          body_path: release_body.md
          files: |
            artifacts/*.ipa
            artifacts/*.tipa
          draft: false
          prerelease: false
          make_latest: true
