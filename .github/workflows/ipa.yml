name: Build and Release IPA

on:
  workflow_dispatch:
    inputs:
      decrypted_ipa_url:
        description: "Direct URL of the decrypted IPA"
        required: true
        type: string

jobs:
  prepareDependencies:
    name: Prepare Dependencies
    runs-on: macos-latest
    outputs:
      IPA_BUNDLE_ID: ${{ steps.IPA.outputs.IPA_BUNDLE_ID }}
      IPA_VERSION: ${{ steps.IPA.outputs.IPA_VERSION }}
      TGEXTRA_VERSION: ${{ steps.TGExtra.outputs.TGEXTRA_VERSION }}
    steps:
      - name: Download decrypted IPA
        env:
          IPA_URL: ${{ inputs.decrypted_ipa_url }}
        run: |
          curl -L -A "Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_7)" -o decrypted.ipa "$IPA_URL"
          unzip -q decrypted.ipa -d payload

      - name: Extract bundle ID & version
        id: IPA
        run: |
          PLIST=payload/Payload/*.app/Info.plist

          echo "IPA_BUNDLE_ID=$(grep -A1 '<key>CFBundleIdentifier</key>' "$PLIST" | grep '<string>' | sed -E 's/.*>(.*)<.*/\1/')" >> $GITHUB_ENV
          echo "IPA_VERSION=$(grep -A1 '<key>CFBundleShortVersionString</key>' "$PLIST" | grep '<string>' | sed -E 's/.*>(.*)<.*/\1/')" >> $GITHUB_ENV

      - name: Download latest TGExtra .deb
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          gh release download release --repo waruhachi/TGExtra --pattern 'com.choco.tg_*_iphoneos-arm.deb' --dir .

      - name: Set TGExtra version
        id: TGExtra
        run: |
          TGF=$(ls com.choco.tg_*_iphoneos-arm.deb | head -n1)
          TGV=$(echo "$TGF" | sed -E 's/com\.choco\.tg_([0-9\.]+)_.+\.deb/\1/')
          echo "TGEXTRA_VERSION=$TGV" >> $GITHUB_ENV

      - name: Download latest SideloadFix.dylib
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          gh release download release --repo waruhachi/SideloadFix --pattern 'SideloadFix.dylib' --dir .

  inject:
    name: Inject TGExtra & SideloadFix
    needs: prepareDependencies
    runs-on: macos-latest
    env:
      IPA_BUNDLE_ID: ${{ needs.prepareDependencies.outputs.IPA_BUNDLE_ID }}
      IPA_VERSION: ${{ needs.prepareDependencies.outputs.IPA_VERSION }}
      TGEXTRA_VERSION: ${{ needs.prepareDependencies.outputs.TGEXTRA_VERSION }}
    steps:
      - name: Install Cyan CLI
        run: |
          pip install --force-reinstall https://github.com/asdfzxcvbn/pyzule-rw/archive/main.zip

      - name: Inject TGExtra & SideloadFix into IPA
        run: |
          OUT_BASE="${IPA_BUNDLE_ID}-${IPA_VERSION}-TGExtra-${TGEXTRA_VERSION}"
          OUT_IPA="${OUT_BASE}.ipa"
          OUT_TIPA="${OUT_BASE}.tipa"

          cyan -i decrypted.ipa -o "$OUT_IPA" -uwsgq -f com.choco.tg_${TGEXTRA_VERSION}_iphoneos-arm.deb -f SideloadFix.dylib

          cp "$OUT_IPA" "$OUT_TIPA"
          mkdir -p artifacts
          mv "$OUT_IPA" "$OUT_TIPA" artifacts/

  updateRelease:
    name: Update GitHub Release with IPA and TIPA
    needs: generateChecksums
    runs-on: macos-latest
    steps:
      - name: Generate Checksums
        id: metadata
        run: |
          for ipa in artifacts/*.ipa; do
            if [ -f "$ipa" ]; then
              echo "### Sideload (IPA)" >> release_body.md
              echo "* MD5: $(md5 -q $ipa)" >> release_body.md
              echo "* SHA1: $(shasum -a 1 $ipa | awk '{ print $1 }')" >> release_body.md
              echo "* SHA256: $(shasum -a 256 $ipa | awk '{ print $1 }')" >> release_body.md
              echo "" >> release_body.md
              break
            fi
          done

          for tipa in artifacts/*.tipa; do
            if [ -f "$tipa" ]; then
              echo "### TrollStore (TIPA)" >> release_body.md
              echo "* MD5: $(md5 -q $tipa)" >> release_body.md
              echo "* SHA1: $(shasum -a 1 $tipa | awk '{ print $1 }')" >> release_body.md
              echo "* SHA256: $(shasum -a 256 $tipa | awk '{ print $1 }')" >> release_body.md
              echo "" >> release_body.md
              break
            fi
          done

      - name: Update GitHub Release
        uses: softprops/action-gh-release@v2
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: release
          name: ${{ github.event.repository.name }}
          body_path: release_body.md
          files: artifacts/*.{ipa,tipa}
          draft: false
          prerelease: false
          make_latest: true
          append_body: true
